title: Empire City Elixir 2016
current: false
date: 2016-05-21
short_description:
  A one-day conference for curious programmers
twitter_description:
  EmpEx, the Empire City Elixir Conference, is a new conference for the Elixir programming language and ecosystem held in New York City.
description:
  EmpEx, the Empire City Elixir Conference, is a new conference for the Elixir programming language and ecosystem held in New York City.
  We will present a single track of technical talks in a memorable, sophisticated environment.
  Our goal is to bring a sense of aesthetic and fun to the growing Elixir community.  We'd love for you to join us.
photos:
  - 001.jpg
  - 002.jpg
  - 003.jpg
  - 004.jpg
  - 005.jpg
  - 006.jpg
  - 007.jpg
  - 008.jpg
  - 009.jpg
  - 010.jpg
  - 011.jpg
location:
  id: subculture
  description: |
    EMPEX will be held at
    [Subculture](http://subculturenewyork.com/), an initimate jazz club
    in Soho.
registration:
  url: https://ti.to/crevalle/empex-2016
  open: false
keynotes_intro:
  We're proud to announce the following keynotes for the first annual EMPEX!
presentations_intro:
  We're proud to announce the following presentations for the first annual EMPEX!
presentations:
  - title: "Giving back, building your first package"
    id: cardarella-giving-back
    presenters:
      - cardarella-brian
    keynote: false
    description: |
      While the world of Elixir is new and exciting there are many libraries that you may take for granted in other languages still missing from Elixir. This is a great opportunity to build your own! This talk will give you the confidence to create your own Elixir libraries to share with the world.

  - title: "Concurrency + Distribution = Scalability + Availability, a journey architecting Systems on BEAM"
    id: cesarini-concurrency-distribution-scalability-availability
    presenters:
      - cesarini-francesco
    keynote: true
    description: |
      Erlang/OTP has for years been described as your secret sauce to writing scalable and available systems. Erlang alone, however, will not do any magic. It is merely an enabler that, thanks to its semantics, programming model and predictable virtual machine makes the end results easier to achieve.

      In this talk, we will walk through the topology patterns of modern distributed architectures, discussing the tradeoffs in scalability and reliability of the actor model, the failure model and the built-in distribution model the BEAM encourages you to take.

  - title: "Real World Elixir Deployment"
    id: gamache-real-world-elixir-deployment
    presenters:
      - gamache-pete
    keynote: false
    description: |
      The Elixir community commonly remarks that deploying Elixir is easy, with noticeably few details about how it's actually done.

      The unsavory truth is that many of us are using a deployment "system" consisting of something like `tmux` + `git pull` + `mix phoenix.server`, thereby gaining few of the deployment advantages of the Erlang/Elixir platform.

      This talk explains how to deploy Elixir in a real-world production setting, including releases, rolling and hot upgrades, rollbacks, clustering, and fault tolerance.  We will also cover the numerous gotchas you may encounter on your way to creating a bulletproof service.

  - title: "Async Jobs in Phoenix"
    id: guimaraes-async-jobs-in-phoenix
    presenters:
      - guimaraes-george
    keynote: true
    description: |
      It's inevitable: you'll need to do some tasks in background. Maybe it's an email you need to send. Maybe it's an image resizing. Maybe it's a business rule that doesn't need to run in the web request.

      In this talk, we'll code and test implementations for these patterns in Elixir/Phoenix, ranging from how you can use `Task.async` or `Task.Supervisor` for fire-and-forget tasks, to using an "external" queue and workers like `exq`.

      More importantly than the tools, we'll examine the kinds of questions you need to ask to decide which tool will fit your needs.

  - title: "Letting the Phoenix Fly in Production"
    id: hirst-letting-the-phoenix-fly-in-production
    presenters:
      - hirst-monica
    keynote: false
    description: |
      Phoenix already does a lot of work to make your life easier as an Elixir developer. But how do you take your Phoenix application to the next level?

      In this talk, we'll see how easy it is to configure and deploy an Phoenix web application using AWS CodeDeploy, including setting up exception monitoring through Honeybadger.

  - title: "A Journey To The Center Of The BEAM"
    id: mitchell-a-journey-to-the-center-of-the-beam
    presenters:
      - mitchell-brian
    keynote: false
    description: |
      It's often hard to understand what actually happens when we run our code. There are many layers like macros, AST to AST translations, intermediate languages, instruction codes, virtual machine models, and finally interpreters and compilers.

      This talk will show how Elixir and Erlang code travels through all of these stages and ends up getting executed. We'll demystify the runtime and learn about tools that can help when optimizing and checking assumptions you might make in your code.

  - title: "Micropatterns: Learning to reach quickly for the right tool"
    id: price-micropatterns
    presenters:
      - price-cameron
    keynote: false
    description: |
      A lot of experienced programmers from non-functional backgrounds struggle when switching to languages like Elixir because the tools that have served them well for years have suddenly become useless in a world without object hierarchies or mutable state. This is expected. Musicians practice their scales, athletes drill basic movements, and chefs practice their knifework.  We programmers are not exempt from the need to hone our fundamentals.

      We will look at several little patterns that are common in Elixir and take advantage of important Elixir features, such as pattern matching, first class functions, and tail recursion.  We'll see how these patterns can be quickly and instinctively deployed to solve real-world problems, along with tips on how to learn the patterns quickly and keep your skills sharp.  Some examples include:

      * Quick and dirty file parsing using pattern matching
      * Breaking down big problems into small mutations
      * Recursing using an accumulator
      * Writing reducer functions using `Enum.reduce_while` and `Stream.unfold`
      * Pipelines (the one pattern everyone in the room already knows and loves and tries to apply everywhere)
      * Happy path programming, in which we extract all the error handling into separate function heads, or let it crash

  - title: "The Journey to Elixir in Production At Scale"
    id: richey-the-journey-to-elixir-in-production-at-scale
    presenters:
      - richey-brandon
    keynote: false
    description: |
      Elixir allowed us to deploy an incredibly high-throughput, low-footprint Phoenix API that experience no issues from the second it entered production. With no prior Erlang/Elixir experience, our team jumped in and we couldn't be more excited by the results.

      Together, we'll highlight Teladoc's journey of taking Elixir into Production. From the initial conversations, the highs and lows, and our excitement going forward, you'll hear a success story from the trenches covering:

      - Initial conversations about adopting Elixir
      - Research into the platform
      - Education initiatives to convince the development team
      - Persuading management
      - The resulting application and benchmarks
      - Issues we ran into along the way
      - What the future holds for our company and Elixir/Phoenix (Hint: more projects!)

  - title: "The Climb - Experiencing the Rise of Elixir from the Inside"
    id: tate-the-climb
    presenters:
      - tate-bruce
    keynote: true
    description: |
      Coming soon!

  - title: "Code Generation in Elixir"
    id: weber-code-generation-in-elixir
    presenters:
      - weber-bryan
    keynote: false
    description: |
      This talk will cover how to create custom generators for Mix, when they are appropriate to use, and when to use macros instead. We will also look at some techniques for generating flexible code that will allow subsequent re-generations to minimize the impact on changes that were made to the generated code.
    
sponsor_intro: |

sponsorship_levels:
  - name: platinum
    sponsor_ids:
      - societyofgrownups
  - name: silver
    sponsor_ids:
      - honeybadger
      - madebymany
schedule:
  - time: 9:00AM
    title: Doors open / Registration
    description: |
      We'll be opening the doors for the conference at 9AM, providing breakfast, coffee, lunch, and refreshments throughout the day, and hosting an after-party at a nearby location.

  - time: 9:30AM
    title: Opening Remarks

  - time: 9:45AM
    presentation: cesarini-concurrency-distribution-scalability-availability

  - time: 10:30AM
    presentation: richey-the-journey-to-elixir-in-production-at-scale

  - time: 10:50AM
    title: Break

  - time: 11:05AM
    presentation: gamache-real-world-elixir-deployment

  - time: 11:55AM
    presentation: guimaraes-async-jobs-in-phoenix

  - time: 12:15PM
    title: Lunch

  - time: 1:00PM
    presentation: cardarella-giving-back

  - time: 1:25PM
    presentation: mitchell-a-journey-to-the-center-of-the-beam

  - time: 2:05PM
    title: Break

  - time: 2:20PM
    presentation: hirst-letting-the-phoenix-fly-in-production

  - time: 2:45PM
    presentation: price-micropatterns

  - time: 3:25PM
    title: Break

  - time: 3:50PM
    presentation: weber-code-generation-in-elixir

  - time: 4:35PM
    presentation: tate-the-climb

  - time: 5:15PM
    title: Closing Remarks

  - time: 5:30PM
    title: After Party!
    description: |
      The afterparty will be held a short walk away at Swift Hibernian Lounge ([34 E 4th St New York, NY 10012](https://www.google.com/maps?ion=1&espv=2&q=swift+bar&bav=on.2,or.&biw=1024&bih=562&dpr=2.5&um=1&ie=UTF-8&sa=X&ved=0ahUKEwj3sdrvlOnMAhUDmx4KHUq4Bu8Q_AUIBigB))


