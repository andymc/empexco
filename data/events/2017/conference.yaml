title: Empire City Elixir Conference 2017
current: true
date: 2017-05-20
short_description:
  A one-day conference for curious programmers
twitter_description:
  EMPEX, the Empire City Elixir Conference, is a sophisticated conference series for the Elixir programming language and ecosystem held in New York City.
description:
  EMPEX, the Empire City Elixir Conference, is a sophisticated conference series for the Elixir programming language and ecosystem held in New York City.
  We present a single track of technical talks in a jazz club.
  Our goal is to bring a sense of aesthetic and fun to the growing Elixir community.  We'd love for you to join us!
photos:
location:
  id: subculture
  description: |
    EMPEX will be held at
    [Subculture](http://subculturenewyork.com/), an initimate jazz club
    in Soho.
registration:
  url: https://ti.to/crevalle/empex-2017
  open: false
keynotes_intro:
  We're excited and proud to announce our keynote speakers for the second annual EMPEX!
presentations_intro:
  "We're proud to announce the following presentations for EMPEX!"
presentations:
  - title:
    id: kerr-jessica
    presenters:
      - kerr-jessica
    keynote: true
    description: |

  - title:
    id: cheng-eugenia
    presenters:
      - cheng-eugenia
    keynote: true
    description: |

  - title: Monitoring Production Elixir Applications
    id: kelly-john
    presenters:
      - kelly-john
    keynote: false
    description: |
      You just celebrated the launch of your first production elixir application and now have real users using your application. In this talk, you’ll learn how to measure and monitor your elixir application as your user base grows from hundreds of daily users to millions. With more users comes more revenue, but also more technical challenges as you go from 1 server to many. `Tail –f` is no longer useful when the logs are going by faster than you can read or the requests are load balanced across many servers. You’ll learn the best practices for monitoring your applications that will scale with you. Best of all these practices are universal so they will be applicable if your organization is solely in the BEAM world or if you’re are in a polyglot environment. Lastly you’ll learn about how to measure availability in the context of web applications and give you the knowledge to measure how many nines of availability your api has.

  - title: Solid Ground
    id: juric-sasa
    presenters:
      - juric-sasa
    keynote: false
    description: |
      The BEAM, the official Erlang VM implementation, is the most important piece of the puzzle in the Elixir ecosystem. It provides some strong guarantees which minimize or completely remove some classes of problems, and simplify implementation of fault-tolerant systems. It is the foundation which makes all other things in the ecosystem possible.

  - title: Channels as Controllers (An Exercise in Refactoring)
    id: vander-hoop-travis
    presenters:
     - vander-hoop-travis
    keynote: false
    description: |
      Phoenix Channels are one of the framework's best features, making real-time applications a snap. But what happens when a channel's responsibilities grow to the point of ill-repute? Let's look at the evolution of a single Phoenix Channel implementation over the course of several small and related features, and see what patterns Elixir developers can leverage to keep their Channels skinny.

  - title: "Understanding Elixir's (re)compilation"
    id: ranellia-renan
    presenters:
      - ranelli-renan
    keynote: false
    description: |
      Elixir's code-generation capabilities require a sophisticated compiler with complex dependency tracking. Given such complexity, it is often unclear why sometimes changing a single line in a single file triggers the recompilation of a hundred others. In this talk we are going to take a deep dive into what happens when you type "mix compile" with the aim of clarifying what is happening.

  - title: Seussical Halting, Indeterminate Faulting
    id: grayson-bobby
    presenters:
      - grayson-bobby
    keynote: false
    description: |
      The halting problem is a classical concept in computer science. In "Scooping the Loop Snooper" Geoffrey K. Pullum wrote a wonderful general proof of it, entirely in Dr. Seuss-Style verse. In this talk we examine the core principles of the paper, also (to the best of my ability), in the same style while working in IEx.

  - title: When Does Concurrency Pay Off?
    id: carroll-william
    presenters:
      - carroll-william
    keynote: false
    description: |
      This talk explores concurrency in Elixir at multiple different scales. From parsing simple strings to unleashing an army of workers to fetch, decode, and store data, at what scale does the overhead of using concurrent computing make sense? This talk presents the findings of someone using Elixir at his day-job where performance isn't a luxury but oftentimes a requirement.

  - title: Everything Beautiful is in Plug
    id: bachari-omid
    presenters:
      - bachari-omid
    keynote: false
    description: |
      Elixir's Plug is a library of code that demonstrates the best of the language. In my talk, I outline the anatomy of the library and do a deep dive into Plug Router. I discuss interesting functions inside the Plug.Router module, especially `compile/4`, which demonstrates the gold standard for implementing macros. Finally, I will recommend the takeaways that can help each of us write great macros.

  - title: Functional Data Structures
    id:
    presenters:
      - soto-juan
    keynote: false
    description: |
      Most developers learn data structures in the context of imperative or object oriented languages. Chris Okasaki, in Purely Functional Data Structures, proved that they can be written from a functional perspective, but his examples were steeped in ML/Haskell semantics. We will take Okasaki's and other's functional data structures, explain them in Elixir terms, and show their practical uses and performance implications. The talk's aim is to be as ""real world"" as possible while showing Elixir's capability to go beyond the standard library data structures and how its semantics favorably support functional data structures."

sponsor_intro: |
sponsorship_levels:
  - name: platinum
    sponsor_ids:
      - stride

courses:
  - id: begin-elixir-2017
  - id: intermed-elixir-2017

schedule: CFP is closed!  We will announce the full schedule by April 1st.


